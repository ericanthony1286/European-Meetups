{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React course\\\\Meetups app Practice\\\\pages\\\\[meetupId]\\\\index.js\";\n// our-domain.com/selected-meetup\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      image: props.meetupData.image,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://nnquangnd:quang123456@cluster0.f5ute.mongodb.net/europeanMeetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetups.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meeupId: meetup._id.toString()\n        }\n      };\n    })\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const client = await MongoClient.connect(\"mongodb+srv://nnquangnd:quang123456@cluster0.f5ute.mongodb.net/europeanMeetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetups.find().toArray();\n  const meetupId = context.params.meetupId;\n  const meetup = meetups.find(meetup => meetup._id === ObjectId(meetupId));\n  console.log(meetupId); // show in terminal\n\n  return {\n    props: {\n      meetupData: {\n        titile: meetup.title,\n        image: meetup.image,\n        id: meetup.id,\n        address: meetup.address,\n        description: meetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/React course/Meetups app Practice/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","Fragment","MeetupDetail","MeetupDetails","props","meetupData","title","address","image","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meeupId","toString","getStaticProps","context","meetupId","console","log","titile","id"],"mappings":";;AAAA;AACA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE,OAF5B;AAGE,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAH1B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AACD,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,4GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMA,OAAO,CAACC,IAAR,CAAa,EAAb,EAAiB;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAjB,EAA6BC,OAA7B,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AAC7B,aAAO;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,OAAO,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAV,OAAP;AACD,KAFM;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMlB,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,4GADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMA,OAAO,CAACC,IAAR,GAAeE,OAAf,EAAtB;AACA,QAAMW,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeK,QAAhC;AACA,QAAMN,MAAM,GAAGR,OAAO,CAACC,IAAR,CAAcO,MAAD,IAAYA,MAAM,CAACN,GAAP,KAAelB,QAAQ,CAAC8B,QAAD,CAAhD,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAV4C,CAUrB;;AACvB,SAAO;AACL1B,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV4B,QAAAA,MAAM,EAAET,MAAM,CAAClB,KADL;AAEVE,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAFJ;AAGV0B,QAAAA,EAAE,EAAEV,MAAM,CAACU,EAHD;AAIV3B,QAAAA,OAAO,EAAEiB,MAAM,CAACjB,OAJN;AAKVE,QAAAA,WAAW,EAAEe,MAAM,CAACf;AALV;AADP;AADF,GAAP;AAWD;AACD,eAAeN,aAAf","sourcesContent":["// our-domain.com/selected-meetup\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <Fragment>\r\n      <MeetupDetail\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        image={props.meetupData.image}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://nnquangnd:quang123456@cluster0.f5ute.mongodb.net/europeanMeetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetups.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => {\r\n      return { params: { meeupId: meetup._id.toString() } };\r\n    }),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for single meetup\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://nnquangnd:quang123456@cluster0.f5ute.mongodb.net/europeanMeetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetups.find().toArray();\r\n  const meetupId = context.params.meetupId;\r\n  const meetup = meetups.find((meetup) => meetup._id === ObjectId(meetupId));\r\n  console.log(meetupId); // show in terminal\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        titile: meetup.title,\r\n        image: meetup.image,\r\n        id: meetup.id,\r\n        address: meetup.address,\r\n        description: meetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}